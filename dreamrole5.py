import discord
from discord.ext import commands, tasks
from discord.ui import Button, View
from flask import Flask
import threading
import requests
import os
import itertools
import math

TOKEN = os.getenv("DISCORD_TOKEN")
PORT = 5000

intents = discord.Intents.default()
intents.guilds = True
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

# ---------------- Role Data ----------------
roles_data = {
    "‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ": [
        {"name": "üåå ‡∏ä‡∏≤‡∏ß‡πÇ‡∏•‡∏Å‡πÅ‡∏´‡πà‡∏á‡∏ù‡∏±‡∏ô (Dreamer)", "desc": "‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô"}
    ],
    "‡∏™‡∏≤‡∏¢‡∏î‡∏π‡πÅ‡∏•": [
        {"name": "üëë Dream Council", "desc": "‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"},
        {"name": "üåô ‡∏ú‡∏π‡πâ‡πÄ‡∏ù‡πâ‡∏≤‡∏ù‡∏±‡∏ô (Dream Watcher)", "desc": "‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"},
        {"name": "‚òÄÔ∏è ‡∏ú‡∏π‡πâ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡∏ù‡∏±‡∏ô (Dream Traveler)", "desc": "‡∏ä‡πà‡∏ß‡∏¢‡∏à‡∏±‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≠‡∏¢‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å"},
        {"name": "‚≠ê ‡∏ô‡∏±‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ù‡∏±‡∏ô (Dream Creator)", "desc": "‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏≠‡πÄ‡∏î‡∏µ‡∏¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡∏ï‡πå"},
        {"name": "üí§ ‡∏ú‡∏π‡πâ‡∏´‡∏•‡∏±‡∏ö‡∏•‡∏∂‡∏Å (Deep Sleeper)", "desc": "‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏¥‡∏à ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥"}
    ],
    "‡πÄ‡∏Å‡∏°‡πÄ‡∏°‡∏≠‡∏£‡πå/‡∏ô‡∏±‡∏Å‡∏ß‡∏≤‡∏î": [
        {"name": "üëæ ‡πÄ‡∏Å‡∏°‡πÄ‡∏°‡∏≠‡∏£‡πå‡πÅ‡∏´‡πà‡∏á‡∏ù‡∏±‡∏ô (Dream Gamer)", "desc": "‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏Å‡∏°"},
        {"name": "üé® ‡∏ô‡∏±‡∏Å‡∏ß‡∏≤‡∏î‡πÅ‡∏´‡πà‡∏á‡∏ù‡∏±‡∏ô (Dream Artist)", "desc": "‡∏ô‡∏±‡∏Å‡∏ß‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏¢‡∏®‡∏¥‡∏•‡∏õ‡∏∞ ‡πÅ‡∏ä‡∏£‡πå‡∏á‡∏≤‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå"},
        {"name": "üå† ‡∏ô‡∏±‡∏Å‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏î‡∏≤‡∏ß (Star Explorer)", "desc": "‡∏ô‡∏±‡∏Å‡∏™‡∏≥‡∏£‡∏ß‡∏à ‡∏ä‡∏≠‡∏ö‡∏•‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡∏°‡πà ‡πÜ"},
        {"name": "‚òÅÔ∏è ‡∏ô‡∏±‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏°‡∏Ü (Cloud Walker)", "desc": "‡∏ô‡∏±‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡∏ï‡πå‡∏ù‡∏±‡∏ô ‡πÜ"}
    ]
}

# ---------------- Rainbow Gradient ----------------
def rainbow_color(index, total, shift=0):
    if total == 0:
        total = 1
    frequency = 2 * math.pi / total
    r = int(math.sin(frequency * index + 0 + shift) * 127 + 128)
    g = int(math.sin(frequency * index + 2 + shift) * 127 + 128)
    b = int(math.sin(frequency * index + 4 + shift) * 127 + 128)
    return discord.Color.from_rgb(r, g, b)

# ---------------- Embed Function ----------------
def create_embed(category, shift=0):
    roles_list = roles_data[category]
    total_roles = len(roles_list)
    embed = discord.Embed(
        title=f"üåå {category} ‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏±‡∏ô",
        description=f"‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏´‡∏°‡∏ß‡∏î {category}",
        color=rainbow_color(0, total_roles, shift)
    )
    for i, role in enumerate(roles_list):
        embed.add_field(
            name=role["name"],
            value=role["desc"],
            inline=False
        )
        embed.color = rainbow_color(i, max(total_roles-1,1), shift)
    embed.set_image(url="https://cdn.discordapp.com/attachments/1418349035508465684/1418350674013458582/IMG_20250919_043837.jpg?ex=68cdcd80&is=68cc7c00&hm=bae1a0bf29b547c40f2bf62cf85a6ac4f57163ba8849f6ff78fed2318a6f104b")
    embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/1418349035508465684/1418352412363587826/IMG_20250919_044551.jpg?ex=68cdcf1e&is=68cc7d9e&hm=ae67ed2785b8ead56876ccf29267bff670862fa541608204e5f0293ba107a160")
    embed.set_footer(text="‚ú® ‡πÇ‡∏•‡∏Å‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏±‡∏ô ‚Ä¢ Dream Realm")
    return embed

# ---------------- Interactive Buttons ----------------
class RoleView(View):
    def __init__(self, channel_id):
        super().__init__(timeout=None)
        self.channel_id = channel_id
        for cat in roles_data.keys():
            button = Button(label=cat, style=discord.ButtonStyle.blurple)
            button.callback = self.make_callback(cat)
            self.add_item(button)

    def make_callback(self, category):
        async def callback(interaction):
            # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏°‡∏ß‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ
            _, msg, shift = channel_messages[interaction.channel.id]
            channel_messages[interaction.channel.id] = (category, msg, shift)
            embed = create_embed(category, shift)
            await interaction.response.edit_message(embed=embed)
        return callback

# ---------------- On Ready ----------------
@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}")
    change_status.start()
    ping_flask.start()
    update_embed_colors.start()

# ---------------- Command !roles ----------------
channel_messages = {}  # ‡πÄ‡∏Å‡πá‡∏ö (‡∏´‡∏°‡∏ß‡∏î, message, shift) ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á

@bot.command()
async def roles(ctx):
    allowed_channels = [1418344972591173702]  # ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏™‡πà ID ‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô [123456789012345678]
    if str(ctx.channel) not in allowed_channels and ctx.channel.id not in allowed_channels:
        await ctx.send("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏≠‡∏á #roles ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", delete_after=10)
        return
    view = RoleView(ctx.channel.id)
    embed = create_embed("‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ")
    msg = await ctx.send(embed=embed, view=view)
    channel_messages[ctx.channel.id] = ("‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", msg, 0)

# ---------------- Flask ----------------
app = Flask("")

@app.route("/")
def home():
    return "Bot is running! ‚úÖ"

def run_flask():
    app.run(host="0.0.0.0", port=PORT)

# ---------------- Ping Monitor ----------------
@tasks.loop(minutes=4)
async def ping_flask():
    try:
        requests.get(f"http://127.0.0.1:{PORT}/")
    except:
        pass

# ---------------- Dynamic Status Loop ----------------
status_cycle = itertools.cycle([
    (discord.Status.idle, discord.Activity(type=discord.ActivityType.watching, name="‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏±‡∏ô üåå")),
    (discord.Status.online, discord.Game(name="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å üå†")),
    (discord.Status.online, discord.Activity(type=discord.ActivityType.watching, name="‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏±‡∏ô üåô"))
])

@tasks.loop(seconds=60)
async def change_status():
    status, activity = next(status_cycle)
    await bot.change_presence(status=status, activity=activity)

# ---------------- Dynamic Rainbow Embed ----------------
@tasks.loop(seconds=10)
async def update_embed_colors():
    for channel_id in list(channel_messages.keys()):
        category, msg, shift = channel_messages[channel_id]
        shift += 0.3  # ‡πÑ‡∏•‡πà‡∏™‡∏µ‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á
        channel_messages[channel_id] = (category, msg, shift)
        try:
            embed = create_embed(category, shift)  # ‡πÉ‡∏ä‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            await msg.edit(embed=embed)
        except:
            continue

# ---------------- Run ----------------
if __name__ == "__main__":
    threading.Thread(target=run_flask).start()
    bot.run(TOKEN)
